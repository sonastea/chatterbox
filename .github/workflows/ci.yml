name: ci/cd

on:
  push:
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "master"

jobs:
  dockerhub:
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: sonastea/chatterbox
    -
      name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    -
      name: Build and push to DockerHub
      uses: docker/build-push-action@v3
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  ec2-prep:
    needs: dockerhub
    runs-on: ubuntu-latest
    steps:
      -
        name: Pull image and stop container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOSTNAME }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          envs: database_url
          script: |
            cd /home/ubuntu/chatterbox
            sudo docker pull sonastea/chatterbox:latest
            sudo docker stop chatterbox
            sudo docker rm -f chatterbox

  ec2-deployment:
    needs: ec2-prep
    runs-on: ubuntu-latest
    steps:
      -
        name: Deploy and run docker container
        uses: appleboy/ssh-action@master
        env:
          database_url: ${{ github.DATABASE_URL }}
        with:
          host: ${{ secrets.AWS_HOSTNAME }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          envs: database_url
          script: |
            sudo docker run -e DATABASE_URL="$database_url" --name chatterbox --restart=always -d -p 8080:8080 -t chatterbox:latest
            sudo docker ps
